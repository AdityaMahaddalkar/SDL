package My_pkg;

import java.net.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.io.*;
import java.util.*;
public class Server extends Thread{
	//static Database db;
	static ServerSocket ServerSock;
	static ArrayList<ClientHandler> Clients;
	static ArrayList<Thread> ThreadList;
	public Server(int port)
	{
		try {
			ServerSock=new ServerSocket(port);
			Clients=new ArrayList<ClientHandler>();
			ThreadList = new ArrayList<Thread>();
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	public static void main(String[] args) throws Exception {
		Server serv=new Server(5051);
		
		while(true) {
			Socket sock = serv.ServerSock.accept();
			
			ClientHandler handle = new ClientHandler(sock);
			
			serv.Clients.add(handle);
			
			Thread t = new Thread(handle);
			
			t.start();
		}
		
	}
	public void print(Object o)
	{
		System.out.println(o);
	}
	@Override
	public void run() {
		while(true)
		{
			
		}
	}
}
class ClientHandler extends Thread
{
	DataInputStream dis;
	DataOutputStream dos;
	Socket sock;
	Database db;
	public ClientHandler(Socket sock)
	{
		this.sock=sock;
		try {
			dis=new DataInputStream(sock.getInputStream());
			dos=new DataOutputStream(sock.getOutputStream());

		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	@Override
	public void run() {
			try {
				String user_name=(String)dis.readUTF();
				String password=(String)dis.readUTF();
				boolean flag = true;
				if(flag)
				{
					dos.writeBoolean(true);
					print("Till Here");
					dos.writeUTF(db.name);
					dos.writeInt(db.roll_number);
					dos.writeFloat(db.attendance);
					dos.writeFloat(db.cgpa);
					
				}
				else
				{
					dos.writeBoolean(false);
				}


			} catch (IOException e) {
				e.printStackTrace();
				
			}
	}
	public void print(Object o)
	{
		System.out.println(o);
	}
	
}

class Databases {
	Connection conn;
	Statement stmt;
	public String name;
	public int roll_number;
	public float cgpa, attendance;
	private String DB_USER = "admin";
	private String DB_PASS = "admin";
	private String DB_URL = "jdbc:mysql://localhost/student";
	
	
	Databases() throws ClassNotFoundException, SQLException{
		Class.forName("com.mysql.jdbc.Driver");
		conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);
		stmt = conn.createStatement();
		name = null;
	}
	public ResultSet executeQuery(String query){
		ResultSet rs = null;
		try {
			rs = stmt.executeQuery(query);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return rs;
	}
	
	
	public void print(Object ob){System.out.println(ob);}
	
	
	public boolean returnData(String user_name, String password){
		ResultSet rs = executeQuery("SELECT * FROM mis WHERE user_name='" + user_name + "' and password='" + password + "'");
		try{
			if(rs.next()){
				print("Roll Number: " + rs.getInt("roll_number"));
				print("Name: " + rs.getString("name"));
				print("CGPA: " + rs.getFloat("cgpa"));
				print("Attendance: " + rs.getFloat("attendance"));
				
				name = rs.getString("name");
				roll_number = rs.getInt("roll_number");
				cgpa = rs.getFloat("cgpa");
				attendance = rs.getFloat("attendance");
				return true;
			}
			else{
				print("User name and password incorrect");
				print("\n\n");
				print("Thankyou for using our system");
				return false;
			}
		}
		catch(Exception e){
			e.printStackTrace();
			return false;
		}
		
	}
	/*
	public static void main(String[] args) {
		Database db = new Database();
		db.returnData("naren", "khake");
		db.print(db.name);
	}
	*/
	
}